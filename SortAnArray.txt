package Assignment19;

public class SortAnArray 
{
    public static int[] sortArray(int[] nums) 
    {
        if (nums == null || nums.length <= 1) 
        {
            return nums;
        }
        quickSort(nums, 0, nums.length - 1);
        return nums;
    }
    private static void quickSort(int[] nums, int low, int high) 
    {
        if (low < high) 
        {
            int pivotIndex = partition(nums, low, high);
            quickSort(nums, low, pivotIndex - 1);
            quickSort(nums, pivotIndex + 1, high);
        }
    }
    private static int partition(int[] nums, int low, int high) 
    {
        int pivot = nums[high];
        int i = low - 1;
        for (int j = low; j < high; j++) 
        {
            if (nums[j] <= pivot) 
            {
                i++;
                swap(nums, i, j);
            }
        }
        swap(nums, i + 1, high);
        return i + 1;
    }
    private static void swap(int[] nums, int i, int j) 
    {
        int temp = nums[i];
        nums[i] = nums[j];
        nums[j] = temp;
    }
    public static void main(String[] args) 
    {
        int[] nums = {5, 2, 3, 1};
        int[] sortedNums = sortArray(nums);
        for (int num : sortedNums) {
            System.out.print(num + ", ");
        }
    }
}

